apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: paperless-ngx
      component: webserver
  template:
    metadata:
      labels:
        app: paperless-ngx
        component: webserver
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: webserver
          image: ghcr.io/paperless-ngx/paperless-ngx:1.17.4
          command:
            - "/usr/local/bin/gunicorn"
            - "-c"
            - "/usr/src/paperless/gunicorn.conf.py"
            - "paperless.asgi:application"
          workingDir: /usr/src/paperless/src
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - secretRef:
                name: paperless
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: data
              mountPath: /usr/src/paperless/data
            - name: media
              mountPath: /usr/src/paperless/media
            - name: export
              mountPath: /usr/src/paperless/export
            - name: consume
              mountPath: /usr/src/paperless/consume
            - name: tmp
              mountPath: /tmp
            - name: temp
              mountPath: /tmp/paperless
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "2000m"
              memory: "2Gi"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            privileged: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: logs
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: data
          persistentVolumeClaim:
            claimName: paperless-ngx-data-0
        - name: media
          persistentVolumeClaim:
            claimName: paperless-ngx-media-0
        - name: export
          persistentVolumeClaim:
            claimName: paperless-ngx-export-0
        - name: temp
          persistentVolumeClaim:
            claimName: paperless-ngx-temp-0
        - name: consume
          persistentVolumeClaim:
            claimName: paperless-ngx-consume-0
